<%- model_class = Link -%>
<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.pluralize %></h1>
</div>
<table class="table table-striped">
  <thead>
    <tr>
      <th><%= model_class.human_attribute_name(:title) %></th>
      <th><%= model_class.human_attribute_name(:url) %></th>
      <th><%= model_class.human_attribute_name(:votes) %></th>  
      <th><%= model_class.human_attribute_name(:comments) %></th>    
    </tr>
  </thead>
  <tbody>  
    <% @links.each do |link| %>
    	<tr>
        <td><%= link_to link.title, link.url %></td>
        <td><%= link_to link.url, link.url %></td>
    		<td>Votes: [ <%= link.votes.where(:up => true).count - link.votes.where(:up => false).count %> ]

    		<% if current_user.votes.where(:link_id => link.id, :up => true).present? %>
    			<%= '[ * ]' %>
    		<% else %>
    			<%= link_to '[ + ]', votes_path(:vote => { :link_id => link.id, :up => true }), :method => :post %>
    		<% end %>

    		<%= link_to '[ - ]', votes_path(:vote => { :link_id => link.id, :up => false}), :method => :post %></td>
    	<td><%= link_to 'comments', link_path(link) %></td>
    	<% end %>
    
    
    
  </tbody>
</table>
<% if @links.previous_page %>
  <%= link_to "< Previous", params.merge(page: @links.previous_page) %>
<% end %>
Page <%= @links.current_page %> of <%= @links.total_pages %>
<% if @links.next_page %>
  <%= link_to "Next >", params.merge(page: @links.next_page) %>
<% end %>
<br /><br />
<%= link_to t('.new', :default => t("helpers.links.new")),
            new_link_path,
            :class => 'btn btn-primary' %>
